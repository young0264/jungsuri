/*
 * This file is generated by jOOQ.
 */
package jooq.dsl.tables.records;


import java.time.LocalDateTime;

import jooq.dsl.tables.MountainExp;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MountainExpRecord extends UpdatableRecordImpl<MountainExpRecord> implements Record5<Long, LocalDateTime, Long, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>jungsuri.mountain_exp.account_entity_id</code>.
     */
    public MountainExpRecord setAccountEntityId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>jungsuri.mountain_exp.account_entity_id</code>.
     */
    public Long getAccountEntityId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>jungsuri.mountain_exp.hiking_date</code>.
     */
    public MountainExpRecord setHikingDate(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>jungsuri.mountain_exp.hiking_date</code>.
     */
    public LocalDateTime getHikingDate() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>jungsuri.mountain_exp.id</code>.
     */
    public MountainExpRecord setId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>jungsuri.mountain_exp.id</code>.
     */
    public Long getId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>jungsuri.mountain_exp.mountain_entity_id</code>.
     */
    public MountainExpRecord setMountainEntityId(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>jungsuri.mountain_exp.mountain_entity_id</code>.
     */
    public Long getMountainEntityId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>jungsuri.mountain_exp.register_id</code>.
     */
    public MountainExpRecord setRegisterId(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>jungsuri.mountain_exp.register_id</code>.
     */
    public Long getRegisterId() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, LocalDateTime, Long, Long, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, LocalDateTime, Long, Long, Long> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return MountainExp.MOUNTAIN_EXP.ACCOUNT_ENTITY_ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return MountainExp.MOUNTAIN_EXP.HIKING_DATE;
    }

    @Override
    public Field<Long> field3() {
        return MountainExp.MOUNTAIN_EXP.ID;
    }

    @Override
    public Field<Long> field4() {
        return MountainExp.MOUNTAIN_EXP.MOUNTAIN_ENTITY_ID;
    }

    @Override
    public Field<Long> field5() {
        return MountainExp.MOUNTAIN_EXP.REGISTER_ID;
    }

    @Override
    public Long component1() {
        return getAccountEntityId();
    }

    @Override
    public LocalDateTime component2() {
        return getHikingDate();
    }

    @Override
    public Long component3() {
        return getId();
    }

    @Override
    public Long component4() {
        return getMountainEntityId();
    }

    @Override
    public Long component5() {
        return getRegisterId();
    }

    @Override
    public Long value1() {
        return getAccountEntityId();
    }

    @Override
    public LocalDateTime value2() {
        return getHikingDate();
    }

    @Override
    public Long value3() {
        return getId();
    }

    @Override
    public Long value4() {
        return getMountainEntityId();
    }

    @Override
    public Long value5() {
        return getRegisterId();
    }

    @Override
    public MountainExpRecord value1(Long value) {
        setAccountEntityId(value);
        return this;
    }

    @Override
    public MountainExpRecord value2(LocalDateTime value) {
        setHikingDate(value);
        return this;
    }

    @Override
    public MountainExpRecord value3(Long value) {
        setId(value);
        return this;
    }

    @Override
    public MountainExpRecord value4(Long value) {
        setMountainEntityId(value);
        return this;
    }

    @Override
    public MountainExpRecord value5(Long value) {
        setRegisterId(value);
        return this;
    }

    @Override
    public MountainExpRecord values(Long value1, LocalDateTime value2, Long value3, Long value4, Long value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MountainExpRecord
     */
    public MountainExpRecord() {
        super(MountainExp.MOUNTAIN_EXP);
    }

    /**
     * Create a detached, initialised MountainExpRecord
     */
    public MountainExpRecord(Long accountEntityId, LocalDateTime hikingDate, Long id, Long mountainEntityId, Long registerId) {
        super(MountainExp.MOUNTAIN_EXP);

        setAccountEntityId(accountEntityId);
        setHikingDate(hikingDate);
        setId(id);
        setMountainEntityId(mountainEntityId);
        setRegisterId(registerId);
    }

    /**
     * Create a detached, initialised MountainExpRecord
     */
    public MountainExpRecord(jooq.dsl.tables.pojos.MountainExp value) {
        super(MountainExp.MOUNTAIN_EXP);

        if (value != null) {
            setAccountEntityId(value.getAccountEntityId());
            setHikingDate(value.getHikingDate());
            setId(value.getId());
            setMountainEntityId(value.getMountainEntityId());
            setRegisterId(value.getRegisterId());
        }
    }
}
