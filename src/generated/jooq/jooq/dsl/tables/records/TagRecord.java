/*
 * This file is generated by jOOQ.
 */
package jooq.dsl.tables.records;


import jooq.dsl.tables.Tag;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TagRecord extends UpdatableRecordImpl<TagRecord> implements Record4<Long, Long, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>jungsuri.tag.account_entity_id</code>.
     */
    public TagRecord setAccountEntityId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>jungsuri.tag.account_entity_id</code>.
     */
    public Long getAccountEntityId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>jungsuri.tag.id</code>.
     */
    public TagRecord setId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>jungsuri.tag.id</code>.
     */
    public Long getId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>jungsuri.tag.dtype</code>.
     */
    public TagRecord setDtype(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>jungsuri.tag.dtype</code>.
     */
    public String getDtype() {
        return (String) get(2);
    }

    /**
     * Setter for <code>jungsuri.tag.name</code>.
     */
    public TagRecord setName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>jungsuri.tag.name</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Long, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, Long, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Tag.TAG.ACCOUNT_ENTITY_ID;
    }

    @Override
    public Field<Long> field2() {
        return Tag.TAG.ID;
    }

    @Override
    public Field<String> field3() {
        return Tag.TAG.DTYPE;
    }

    @Override
    public Field<String> field4() {
        return Tag.TAG.NAME;
    }

    @Override
    public Long component1() {
        return getAccountEntityId();
    }

    @Override
    public Long component2() {
        return getId();
    }

    @Override
    public String component3() {
        return getDtype();
    }

    @Override
    public String component4() {
        return getName();
    }

    @Override
    public Long value1() {
        return getAccountEntityId();
    }

    @Override
    public Long value2() {
        return getId();
    }

    @Override
    public String value3() {
        return getDtype();
    }

    @Override
    public String value4() {
        return getName();
    }

    @Override
    public TagRecord value1(Long value) {
        setAccountEntityId(value);
        return this;
    }

    @Override
    public TagRecord value2(Long value) {
        setId(value);
        return this;
    }

    @Override
    public TagRecord value3(String value) {
        setDtype(value);
        return this;
    }

    @Override
    public TagRecord value4(String value) {
        setName(value);
        return this;
    }

    @Override
    public TagRecord values(Long value1, Long value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TagRecord
     */
    public TagRecord() {
        super(Tag.TAG);
    }

    /**
     * Create a detached, initialised TagRecord
     */
    public TagRecord(Long accountEntityId, Long id, String dtype, String name) {
        super(Tag.TAG);

        setAccountEntityId(accountEntityId);
        setId(id);
        setDtype(dtype);
        setName(name);
    }

    /**
     * Create a detached, initialised TagRecord
     */
    public TagRecord(jooq.dsl.tables.pojos.Tag value) {
        super(Tag.TAG);

        if (value != null) {
            setAccountEntityId(value.getAccountEntityId());
            setId(value.getId());
            setDtype(value.getDtype());
            setName(value.getName());
        }
    }
}
