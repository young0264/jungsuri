/*
 * This file is generated by jOOQ.
 */
package jooq.dsl.tables.records;


import java.time.LocalDateTime;

import jooq.dsl.tables.Tag;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TagRecord extends UpdatableRecordImpl<TagRecord> implements Record5<Integer, LocalDateTime, Long, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>jungsuri.tag.used_count</code>.
     */
    public TagRecord setUsedCount(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>jungsuri.tag.used_count</code>.
     */
    public Integer getUsedCount() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>jungsuri.tag.created_at</code>.
     */
    public TagRecord setCreatedAt(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>jungsuri.tag.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>jungsuri.tag.id</code>.
     */
    public TagRecord setId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>jungsuri.tag.id</code>.
     */
    public Long getId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>jungsuri.tag.dtype</code>.
     */
    public TagRecord setDtype(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>jungsuri.tag.dtype</code>.
     */
    public String getDtype() {
        return (String) get(3);
    }

    /**
     * Setter for <code>jungsuri.tag.name</code>.
     */
    public TagRecord setName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>jungsuri.tag.name</code>.
     */
    public String getName() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, LocalDateTime, Long, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, LocalDateTime, Long, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Tag.TAG.USED_COUNT;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return Tag.TAG.CREATED_AT;
    }

    @Override
    public Field<Long> field3() {
        return Tag.TAG.ID;
    }

    @Override
    public Field<String> field4() {
        return Tag.TAG.DTYPE;
    }

    @Override
    public Field<String> field5() {
        return Tag.TAG.NAME;
    }

    @Override
    public Integer component1() {
        return getUsedCount();
    }

    @Override
    public LocalDateTime component2() {
        return getCreatedAt();
    }

    @Override
    public Long component3() {
        return getId();
    }

    @Override
    public String component4() {
        return getDtype();
    }

    @Override
    public String component5() {
        return getName();
    }

    @Override
    public Integer value1() {
        return getUsedCount();
    }

    @Override
    public LocalDateTime value2() {
        return getCreatedAt();
    }

    @Override
    public Long value3() {
        return getId();
    }

    @Override
    public String value4() {
        return getDtype();
    }

    @Override
    public String value5() {
        return getName();
    }

    @Override
    public TagRecord value1(Integer value) {
        setUsedCount(value);
        return this;
    }

    @Override
    public TagRecord value2(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public TagRecord value3(Long value) {
        setId(value);
        return this;
    }

    @Override
    public TagRecord value4(String value) {
        setDtype(value);
        return this;
    }

    @Override
    public TagRecord value5(String value) {
        setName(value);
        return this;
    }

    @Override
    public TagRecord values(Integer value1, LocalDateTime value2, Long value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TagRecord
     */
    public TagRecord() {
        super(Tag.TAG);
    }

    /**
     * Create a detached, initialised TagRecord
     */
    public TagRecord(Integer usedCount, LocalDateTime createdAt, Long id, String dtype, String name) {
        super(Tag.TAG);

        setUsedCount(usedCount);
        setCreatedAt(createdAt);
        setId(id);
        setDtype(dtype);
        setName(name);
    }

    /**
     * Create a detached, initialised TagRecord
     */
    public TagRecord(jooq.dsl.tables.pojos.Tag value) {
        super(Tag.TAG);

        if (value != null) {
            setUsedCount(value.getUsedCount());
            setCreatedAt(value.getCreatedAt());
            setId(value.getId());
            setDtype(value.getDtype());
            setName(value.getName());
        }
    }
}
