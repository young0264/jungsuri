/*
 * This file is generated by jOOQ.
 */
package jooq.dsl.tables.records;


import java.time.LocalDateTime;

import jooq.dsl.enums.NotificationType;
import jooq.dsl.tables.Notification;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NotificationRecord extends UpdatableRecordImpl<NotificationRecord> implements Record8<Boolean, Long, LocalDateTime, Long, String, String, String, NotificationType> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>jungsuri.notification.checked</code>.
     */
    public NotificationRecord setChecked(Boolean value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>jungsuri.notification.checked</code>.
     */
    public Boolean getChecked() {
        return (Boolean) get(0);
    }

    /**
     * Setter for <code>jungsuri.notification.account_entity_id</code>.
     */
    public NotificationRecord setAccountEntityId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>jungsuri.notification.account_entity_id</code>.
     */
    public Long getAccountEntityId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>jungsuri.notification.created_at</code>.
     */
    public NotificationRecord setCreatedAt(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>jungsuri.notification.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>jungsuri.notification.id</code>.
     */
    public NotificationRecord setId(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>jungsuri.notification.id</code>.
     */
    public Long getId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>jungsuri.notification.link</code>.
     */
    public NotificationRecord setLink(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>jungsuri.notification.link</code>.
     */
    public String getLink() {
        return (String) get(4);
    }

    /**
     * Setter for <code>jungsuri.notification.message</code>.
     */
    public NotificationRecord setMessage(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>jungsuri.notification.message</code>.
     */
    public String getMessage() {
        return (String) get(5);
    }

    /**
     * Setter for <code>jungsuri.notification.title</code>.
     */
    public NotificationRecord setTitle(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>jungsuri.notification.title</code>.
     */
    public String getTitle() {
        return (String) get(6);
    }

    /**
     * Setter for <code>jungsuri.notification.type</code>.
     */
    public NotificationRecord setType(NotificationType value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>jungsuri.notification.type</code>.
     */
    public NotificationType getType() {
        return (NotificationType) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Boolean, Long, LocalDateTime, Long, String, String, String, NotificationType> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Boolean, Long, LocalDateTime, Long, String, String, String, NotificationType> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Boolean> field1() {
        return Notification.NOTIFICATION.CHECKED;
    }

    @Override
    public Field<Long> field2() {
        return Notification.NOTIFICATION.ACCOUNT_ENTITY_ID;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Notification.NOTIFICATION.CREATED_AT;
    }

    @Override
    public Field<Long> field4() {
        return Notification.NOTIFICATION.ID;
    }

    @Override
    public Field<String> field5() {
        return Notification.NOTIFICATION.LINK;
    }

    @Override
    public Field<String> field6() {
        return Notification.NOTIFICATION.MESSAGE;
    }

    @Override
    public Field<String> field7() {
        return Notification.NOTIFICATION.TITLE;
    }

    @Override
    public Field<NotificationType> field8() {
        return Notification.NOTIFICATION.TYPE;
    }

    @Override
    public Boolean component1() {
        return getChecked();
    }

    @Override
    public Long component2() {
        return getAccountEntityId();
    }

    @Override
    public LocalDateTime component3() {
        return getCreatedAt();
    }

    @Override
    public Long component4() {
        return getId();
    }

    @Override
    public String component5() {
        return getLink();
    }

    @Override
    public String component6() {
        return getMessage();
    }

    @Override
    public String component7() {
        return getTitle();
    }

    @Override
    public NotificationType component8() {
        return getType();
    }

    @Override
    public Boolean value1() {
        return getChecked();
    }

    @Override
    public Long value2() {
        return getAccountEntityId();
    }

    @Override
    public LocalDateTime value3() {
        return getCreatedAt();
    }

    @Override
    public Long value4() {
        return getId();
    }

    @Override
    public String value5() {
        return getLink();
    }

    @Override
    public String value6() {
        return getMessage();
    }

    @Override
    public String value7() {
        return getTitle();
    }

    @Override
    public NotificationType value8() {
        return getType();
    }

    @Override
    public NotificationRecord value1(Boolean value) {
        setChecked(value);
        return this;
    }

    @Override
    public NotificationRecord value2(Long value) {
        setAccountEntityId(value);
        return this;
    }

    @Override
    public NotificationRecord value3(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public NotificationRecord value4(Long value) {
        setId(value);
        return this;
    }

    @Override
    public NotificationRecord value5(String value) {
        setLink(value);
        return this;
    }

    @Override
    public NotificationRecord value6(String value) {
        setMessage(value);
        return this;
    }

    @Override
    public NotificationRecord value7(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public NotificationRecord value8(NotificationType value) {
        setType(value);
        return this;
    }

    @Override
    public NotificationRecord values(Boolean value1, Long value2, LocalDateTime value3, Long value4, String value5, String value6, String value7, NotificationType value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NotificationRecord
     */
    public NotificationRecord() {
        super(Notification.NOTIFICATION);
    }

    /**
     * Create a detached, initialised NotificationRecord
     */
    public NotificationRecord(Boolean checked, Long accountEntityId, LocalDateTime createdAt, Long id, String link, String message, String title, NotificationType type) {
        super(Notification.NOTIFICATION);

        setChecked(checked);
        setAccountEntityId(accountEntityId);
        setCreatedAt(createdAt);
        setId(id);
        setLink(link);
        setMessage(message);
        setTitle(title);
        setType(type);
    }

    /**
     * Create a detached, initialised NotificationRecord
     */
    public NotificationRecord(jooq.dsl.tables.pojos.Notification value) {
        super(Notification.NOTIFICATION);

        if (value != null) {
            setChecked(value.getChecked());
            setAccountEntityId(value.getAccountEntityId());
            setCreatedAt(value.getCreatedAt());
            setId(value.getId());
            setLink(value.getLink());
            setMessage(value.getMessage());
            setTitle(value.getTitle());
            setType(value.getType());
        }
    }
}
