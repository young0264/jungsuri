/*
 * This file is generated by jOOQ.
 */
package jooq.dsl.tables.records;


import java.time.LocalDateTime;

import jooq.dsl.tables.Post;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PostRecord extends UpdatableRecordImpl<PostRecord> implements Record12<Long, String, Integer, String, LocalDateTime, String, Integer, String, String, LocalDateTime, Integer, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>jungsuri.post.id</code>.
     */
    public PostRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>jungsuri.post.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>jungsuri.post.author</code>.
     */
    public PostRecord setAuthor(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>jungsuri.post.author</code>.
     */
    public String getAuthor() {
        return (String) get(1);
    }

    /**
     * Setter for <code>jungsuri.post.comment_count</code>.
     */
    public PostRecord setCommentCount(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>jungsuri.post.comment_count</code>.
     */
    public Integer getCommentCount() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>jungsuri.post.content</code>.
     */
    public PostRecord setContent(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>jungsuri.post.content</code>.
     */
    public String getContent() {
        return (String) get(3);
    }

    /**
     * Setter for <code>jungsuri.post.created_at</code>.
     */
    public PostRecord setCreatedAt(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>jungsuri.post.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>jungsuri.post.image_path</code>.
     */
    public PostRecord setImagePath(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>jungsuri.post.image_path</code>.
     */
    public String getImagePath() {
        return (String) get(5);
    }

    /**
     * Setter for <code>jungsuri.post.like_count</code>.
     */
    public PostRecord setLikeCount(Integer value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>jungsuri.post.like_count</code>.
     */
    public Integer getLikeCount() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>jungsuri.post.login_id</code>.
     */
    public PostRecord setLoginId(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>jungsuri.post.login_id</code>.
     */
    public String getLoginId() {
        return (String) get(7);
    }

    /**
     * Setter for <code>jungsuri.post.title</code>.
     */
    public PostRecord setTitle(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>jungsuri.post.title</code>.
     */
    public String getTitle() {
        return (String) get(8);
    }

    /**
     * Setter for <code>jungsuri.post.updated_at</code>.
     */
    public PostRecord setUpdatedAt(LocalDateTime value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>jungsuri.post.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>jungsuri.post.view_count</code>.
     */
    public PostRecord setViewCount(Integer value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>jungsuri.post.view_count</code>.
     */
    public Integer getViewCount() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>jungsuri.post.account_entity_id</code>.
     */
    public PostRecord setAccountEntityId(Long value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>jungsuri.post.account_entity_id</code>.
     */
    public Long getAccountEntityId() {
        return (Long) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<Long, String, Integer, String, LocalDateTime, String, Integer, String, String, LocalDateTime, Integer, Long> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<Long, String, Integer, String, LocalDateTime, String, Integer, String, String, LocalDateTime, Integer, Long> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Post.POST.ID;
    }

    @Override
    public Field<String> field2() {
        return Post.POST.AUTHOR;
    }

    @Override
    public Field<Integer> field3() {
        return Post.POST.COMMENT_COUNT;
    }

    @Override
    public Field<String> field4() {
        return Post.POST.CONTENT;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Post.POST.CREATED_AT;
    }

    @Override
    public Field<String> field6() {
        return Post.POST.IMAGE_PATH;
    }

    @Override
    public Field<Integer> field7() {
        return Post.POST.LIKE_COUNT;
    }

    @Override
    public Field<String> field8() {
        return Post.POST.LOGIN_ID;
    }

    @Override
    public Field<String> field9() {
        return Post.POST.TITLE;
    }

    @Override
    public Field<LocalDateTime> field10() {
        return Post.POST.UPDATED_AT;
    }

    @Override
    public Field<Integer> field11() {
        return Post.POST.VIEW_COUNT;
    }

    @Override
    public Field<Long> field12() {
        return Post.POST.ACCOUNT_ENTITY_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getAuthor();
    }

    @Override
    public Integer component3() {
        return getCommentCount();
    }

    @Override
    public String component4() {
        return getContent();
    }

    @Override
    public LocalDateTime component5() {
        return getCreatedAt();
    }

    @Override
    public String component6() {
        return getImagePath();
    }

    @Override
    public Integer component7() {
        return getLikeCount();
    }

    @Override
    public String component8() {
        return getLoginId();
    }

    @Override
    public String component9() {
        return getTitle();
    }

    @Override
    public LocalDateTime component10() {
        return getUpdatedAt();
    }

    @Override
    public Integer component11() {
        return getViewCount();
    }

    @Override
    public Long component12() {
        return getAccountEntityId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getAuthor();
    }

    @Override
    public Integer value3() {
        return getCommentCount();
    }

    @Override
    public String value4() {
        return getContent();
    }

    @Override
    public LocalDateTime value5() {
        return getCreatedAt();
    }

    @Override
    public String value6() {
        return getImagePath();
    }

    @Override
    public Integer value7() {
        return getLikeCount();
    }

    @Override
    public String value8() {
        return getLoginId();
    }

    @Override
    public String value9() {
        return getTitle();
    }

    @Override
    public LocalDateTime value10() {
        return getUpdatedAt();
    }

    @Override
    public Integer value11() {
        return getViewCount();
    }

    @Override
    public Long value12() {
        return getAccountEntityId();
    }

    @Override
    public PostRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PostRecord value2(String value) {
        setAuthor(value);
        return this;
    }

    @Override
    public PostRecord value3(Integer value) {
        setCommentCount(value);
        return this;
    }

    @Override
    public PostRecord value4(String value) {
        setContent(value);
        return this;
    }

    @Override
    public PostRecord value5(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public PostRecord value6(String value) {
        setImagePath(value);
        return this;
    }

    @Override
    public PostRecord value7(Integer value) {
        setLikeCount(value);
        return this;
    }

    @Override
    public PostRecord value8(String value) {
        setLoginId(value);
        return this;
    }

    @Override
    public PostRecord value9(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public PostRecord value10(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public PostRecord value11(Integer value) {
        setViewCount(value);
        return this;
    }

    @Override
    public PostRecord value12(Long value) {
        setAccountEntityId(value);
        return this;
    }

    @Override
    public PostRecord values(Long value1, String value2, Integer value3, String value4, LocalDateTime value5, String value6, Integer value7, String value8, String value9, LocalDateTime value10, Integer value11, Long value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PostRecord
     */
    public PostRecord() {
        super(Post.POST);
    }

    /**
     * Create a detached, initialised PostRecord
     */
    public PostRecord(Long id, String author, Integer commentCount, String content, LocalDateTime createdAt, String imagePath, Integer likeCount, String loginId, String title, LocalDateTime updatedAt, Integer viewCount, Long accountEntityId) {
        super(Post.POST);

        setId(id);
        setAuthor(author);
        setCommentCount(commentCount);
        setContent(content);
        setCreatedAt(createdAt);
        setImagePath(imagePath);
        setLikeCount(likeCount);
        setLoginId(loginId);
        setTitle(title);
        setUpdatedAt(updatedAt);
        setViewCount(viewCount);
        setAccountEntityId(accountEntityId);
    }

    /**
     * Create a detached, initialised PostRecord
     */
    public PostRecord(jooq.dsl.tables.pojos.Post value) {
        super(Post.POST);

        if (value != null) {
            setId(value.getId());
            setAuthor(value.getAuthor());
            setCommentCount(value.getCommentCount());
            setContent(value.getContent());
            setCreatedAt(value.getCreatedAt());
            setImagePath(value.getImagePath());
            setLikeCount(value.getLikeCount());
            setLoginId(value.getLoginId());
            setTitle(value.getTitle());
            setUpdatedAt(value.getUpdatedAt());
            setViewCount(value.getViewCount());
            setAccountEntityId(value.getAccountEntityId());
        }
    }
}
