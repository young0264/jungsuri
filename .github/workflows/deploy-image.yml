#
#jobs:
#  build:
#    runs-on: ubuntu-latest  # GitHub Actions 실행 환경 선택
#
#    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v3
#
#      - name: Login to DockerHub
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_PASSWORD }}
#
##      - name: Set up JDK 18
##        uses: actions/setup-java@v3
##        with:
##          java-version: '18'  # 사용할 Java 버전 설정
#
#      - name: Build JAR
#        run: |
#          ./gradlew build  # 빌드 스크립트에 따라 변경 가능
#
#      - name: Deploy to Docker
#        run: |
#          docker build -t jungsuri .
#          docker run -p 8002:8002 --name jungsuri-container --network jungsuri-network -d 'ny2485/jungsuri'
#
##
##
##
## This workflow uses actions that are not certified by GitHub.
## They are provided by a third-party and are governed by
## separate terms of service, privacy policy, and support
## documentation.
## This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
## For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Build and Deploy
on:
  push:
    branches:
      - main  # 또는 원하는 브랜치로 변경
jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    services:
      mysql:
        image: mysql:8.1
        container_name: mysql-container  # 컨테이너의 이름 설정 (원하는 대로 변경 가능)
        environment:
          MYSQL_ROOT_USER: young  # MySQL 루트 사용자의 비밀번호 설정
          MYSQL_ROOT_PASSWORD: 7dmldud9!!  # MySQL 루트 사용자의 비밀번호 설정
          MYSQL_DATABASE: jungsuri  # 데이터베이스 이름 설정
          MYSQL_USER: young
          MYSQL_PASSWORD: 7dmldud9!!
          MYSQL_ROOT_HOST: '%'
        ports:
          - "3306:3306"  # 호스트와 컨테이너 간의 포트 매핑 (호스트 포트:컨테이너 포트)
        networks:
          jungsuri-network  # 컨테이너가 연결될 네트워크 설정 (아래에서 정의한 네트워크와 동일하게 설정)

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'temurin'
      #          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
      #          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Build with Gradle
        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
        with:
          arguments: build
      - name: Run JAR
        run: java -jar build/libs/jungsuri-0.0.1-SNAPSHOT.jar
      # The USERNAME and TOKEN need to correspond to the credentials environment variables used in
      # the publishing section of your build.gradle
      - name: Publish to GitHub Packages
        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
        with:
          arguments: publish
        env:
          USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          TOKEN: ${{ secrets.DOCKERHUB_PASSWORD }}
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_PASSWORD }}
